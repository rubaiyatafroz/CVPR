import os
import random
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import matplotlib.pyplot as plt
import numpy as np
from tensorflow.keras.datasets import mnist
(train_img, train_label),(test_img, test_label) = mnist.load_data()
train_img , test_img = train_img.reshape(-1,28,28,1)/255, test_img.reshape(-1,28,28,1)/255
model = keras.Sequential([
    keras.Input(shape=(28,28,1)),
    
    layers.Conv2D(filters=64, kernel_size=(3,3), activation ='relu'),
    layers.MaxPooling2D(pool_size=(2,2)),
    
    layers.Flatten(),
    layers.Dense(64, activation='relu'),
    layers.Dense(10, activation='softmax')
                        ])
						model.compile(
    optimizer='adam',
    loss = 'sparse_categorical_crossentropy',
    metrics='accuracy'
)
 h=model.fit(x=train_img, y=train_label, epochs=5)